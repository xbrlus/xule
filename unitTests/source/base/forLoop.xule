/* ForLoop */
output FORL101
/* 1 */

  for ($x in range(1)) $x

output FORL102
/* list(1, 2, 3, 4, 5, 6, 7, 8, 9, 10) */

  list(for $x in range(10)
                    $x)

output FORL103
/* list(1, 2, 3, 6, 7, 8) */

  $mylist = list(1,2,3,6,7,8)
list(for $i in range($mylist.length)
                    $mylist[$i]
                )

output FORL104
/* rule FORL104: Rule: FORL104 - For loop requires a set or list, found 'string'. */

  list(for $i in 'hello'
                    $i
                )

output FORL105
/* rule FORL105: Rule: FORL105 - For loop requires a set or list, found 'qname'. */

  list(for $i in Assets
                    $i
                )

output FORL106
/* true, true, true, true */

  for $i in list([@instance = $INSTANCE1 @concept = Assets]).is-numeric
                    $i

output FORL107
/* true, true, true */

  for $i in list([@instance = $INSTANCE1 @concept = Assets])
                    $i.is-numeric

output FORL108
/* true, true, true */

  for $i in list([covered @instance = $INSTANCE1 @concept = Assets]).is-numeric
                    $i

output FORL109
/* 40230000000 */

  for $i in list([@instance = $INSTANCE1 @concept = Assets]).string
                    $i

output FORL110
/* [FORL110] list(45,436,000,000)
[FORL110] list(40,230,000,000)
[FORL110] list(42,144,000,000) */

  list([@instance = $INSTANCE1 @concept = Assets]).string

output FORL111
/* 1 */

  for $i in list(1,2,3).string
                    $i

output FORL112
/* [FORL112] 45,436,000,000
[FORL112] 40,230,000,000
[FORL112] 42,144,000,000 */

  for $i in list([@instance = $INSTANCE1 @concept = Assets])
                    $i
